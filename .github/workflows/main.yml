name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0


  backend:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          # - stable - not suported #![feature(future_join)]
          # - beta - not supported  #![feature(future_join)]
          - nightly
        environment: [dev] # test, staging, production
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: cp -a ./envs/${{ matrix.environment }}/. .
      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./apps/erudio/docker-compose.yml"
          services: |
            postgres
            redis
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }} && rustup component add clippy
      - name: Generate prisma client
        run: cargo prisma generate
        working-directory: ./apps/erudio/backend-prisma-cli
      - run: cargo build
      - run: cargo clippy -- -D warnings
      - run: cargo test


  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev] # test, staging, production
    needs:
      - frontend
      - backend
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: cp -a ./envs/${{ matrix.environment }}/. .
      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./apps/erudio/docker-compose.yml"
          up-flags: "--build"
          services: |
            postgres
            redis
            api
      - run: echo "INTEGRATION TESTS"