name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0


  backend:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          # - stable - not suported #![feature(future_join)]
          # - beta - not supported  #![feature(future_join)]
          - nightly
        environment: [dev] # test, staging, production
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed rust files
        id: changed-rust
        uses: tj-actions/changed-files@v34
        with:
          files: |
            **/*.rs
            **/*.toml
      - run: cp -a ./envs/${{ matrix.environment }}/. .
        if: steps.changed-rust.outputs.any_changed == 'true'
      - uses: isbang/compose-action@v1.4.1
        if: steps.changed-rust.outputs.any_changed == 'true'
        with:
          compose-file: "./apps/erudio/docker-compose.yml"
          services: |
            postgres
            redis
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }} && rustup component add clippy
        if: steps.changed-rust.outputs.any_changed == 'true'
      - uses: Swatinem/rust-cache@v2
        if: steps.changed-rust.outputs.any_changed == 'true'
      - name: Generate prisma client
        if: steps.changed-rust.outputs.any_changed == 'true'
        run: cargo run --bin prisma_cli --release -- generate
        working-directory: ./apps/erudio/backend-prisma-cli
      - run: cargo build --release
        if: steps.changed-rust.outputs.any_changed == 'true'
      - run: cargo clippy --release -- -D warnings
        if: steps.changed-rust.outputs.any_changed == 'true'
      - run: cargo test --release
        if: steps.changed-rust.outputs.any_changed == 'true'


  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev] # test, staging, production
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed code files
        id: changed-any
        uses: tj-actions/changed-files@v34
        with:
          files: |
            **/*.{rs, toml, json, yaml, js, ts, jsx, tsx, html, css}
            ./apps/erudio/docker-compose.yml
      - run: cp -a ./envs/${{ matrix.environment }}/. .
      - run: docker-compose pull
        working-directory: ./apps/erudio
      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./apps/erudio/docker-compose.yml"
          up-flags: "--build"
          services: |
            postgres
            redis
            api
      - run: echo "INTEGRATION TESTS"
